{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mturk\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\first-app\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\n// src/components/Comment.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/posts/${postId}/comments`);\n        setComments(response.data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [postId]);\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (newComment.trim()) {\n      try {\n        const response = await axios.post(`http://localhost:5000/posts/${postId}/comments`, {\n          text: newComment\n        });\n        setComments([...comments, response.data]);\n        setNewComment('');\n      } catch (error) {\n        console.error('Error posting comment:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow-md mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2 mb-4\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-2 rounded\",\n        children: comment.text\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      className: \"flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment\",\n        className: \"flex-grow p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Comment","postId","_s","comments","setComments","newComment","setNewComment","fetchComments","response","get","data","error","console","handleCommentSubmit","e","preventDefault","trim","post","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","id","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/mturk/OneDrive/Masaüstü/first-app/src/components/Comment.js"],"sourcesContent":["// src/components/Comment.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Comment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/posts/${postId}/comments`);\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    };\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim()) {\r\n      try {\r\n        const response = await axios.post(`http://localhost:5000/posts/${postId}/comments`, { text: newComment });\r\n        setComments([...comments, response.data]);\r\n        setNewComment('');\r\n      } catch (error) {\r\n        console.error('Error posting comment:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded shadow-md mt-4\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">Comments</h3>\r\n      <ul className=\"space-y-2 mb-4\">\r\n        {comments.map((comment) => (\r\n          <li key={comment.id} className=\"border p-2 rounded\">\r\n            {comment.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleCommentSubmit} className=\"flex space-x-2\">\r\n        <input\r\n          type=\"text\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Add a comment\"\r\n          className=\"flex-grow p-2 border rounded\"\r\n        />\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,+BAA+BR,MAAM,WAAW,CAAC;QAClFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMY,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIV,UAAU,CAACW,IAAI,CAAC,CAAC,EAAE;MACrB,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMX,KAAK,CAACoB,IAAI,CAAC,+BAA+BhB,MAAM,WAAW,EAAE;UAAEiB,IAAI,EAAEb;QAAW,CAAC,CAAC;QACzGD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,QAAQ,CAACE,IAAI,CAAC,CAAC;QACzCJ,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAClDrB,OAAA;MAAIoB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDzB,OAAA;MAAIoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC3BjB,QAAQ,CAACsB,GAAG,CAAEC,OAAO,iBACpB3B,OAAA;QAAqBoB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChDM,OAAO,CAACR;MAAI,GADNQ,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLzB,OAAA;MAAM6B,QAAQ,EAAEf,mBAAoB;MAACM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7DrB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,UAAW;QAClB0B,QAAQ,EAAGjB,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC,eAAe;QAC3Bd,SAAS,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFzB,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CAnDIF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}