{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mturk\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\first-app\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\n// src/pages/PostPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Comment from '../components/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPostContent, setNewPostContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/posts');\n        setPosts(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (newPostContent.trim()) {\n      try {\n        const response = await axios.post('http://localhost:5000/posts', {\n          content: newPostContent\n        });\n        setPosts([...posts, response.data]);\n        setNewPostContent('');\n      } catch (error) {\n        console.error('Error posting new content:', error);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newPostContent,\n        onChange: e => setNewPostContent(e.target.value),\n        placeholder: \"Write a new post\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          margin: '10px 0',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Comment, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"bUs2Qnx35AqVsG8guIVQ/c54wYI=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Comment","jsxDEV","_jsxDEV","PostPage","_s","posts","setPosts","newPostContent","setNewPostContent","loading","setLoading","fetchPosts","response","get","data","error","console","handlePostSubmit","e","preventDefault","trim","post","content","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","length","map","style","border","margin","padding","postId","id","_c","$RefreshReg$"],"sources":["C:/Users/mturk/OneDrive/Masaüstü/first-app/src/pages/PostPage.js"],"sourcesContent":["// src/pages/PostPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Comment from '../components/Comment';\r\n\r\nconst PostPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newPostContent, setNewPostContent] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/posts');\r\n        setPosts(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPostContent.trim()) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/posts', { content: newPostContent });\r\n        setPosts([...posts, response.data]);\r\n        setNewPostContent('');\r\n      } catch (error) {\r\n        console.error('Error posting new content:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <form onSubmit={handlePostSubmit}>\r\n        <textarea\r\n          value={newPostContent}\r\n          onChange={(e) => setNewPostContent(e.target.value)}\r\n          placeholder=\"Write a new post\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Post</button>\r\n      </form>\r\n      <div>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post.id} style={{ border: '1px solid #ddd', margin: '10px 0', padding: '10px' }}>\r\n              <h3>{post.content}</h3>\r\n              <Comment postId={post.id} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}