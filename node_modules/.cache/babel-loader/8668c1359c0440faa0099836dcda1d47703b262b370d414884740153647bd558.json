{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mturk\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\first-app\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    if (token && role) {\n      setUser({\n        token,\n        role\n      });\n    }\n  }, []);\n  const login = (username, password) => {\n    // Sahte kullanıcı doğrulama\n    if (username === 'admin' && password === 'admin') {\n      localStorage.setItem('token', 'admin-token');\n      localStorage.setItem('role', 'admin');\n      setUser({\n        token: 'admin-token',\n        role: 'admin'\n      });\n      navigate('/admin');\n    } else if (username === 'user' && password === 'user') {\n      localStorage.setItem('token', 'user-token');\n      localStorage.setItem('role', 'user');\n      setUser({\n        token: 'user-token',\n        role: 'user'\n      });\n      navigate('/posts');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setUser(null);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","localStorage","getItem","role","login","username","password","setItem","alert","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mturk/OneDrive/Masaüstü/first-app/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n    if (token && role) {\r\n      setUser({ token, role });\r\n    }\r\n  }, []);\r\n\r\n  const login = (username, password) => {\r\n    // Sahte kullanıcı doğrulama\r\n    if (username === 'admin' && password === 'admin') {\r\n      localStorage.setItem('token', 'admin-token');\r\n      localStorage.setItem('role', 'admin');\r\n      setUser({ token: 'admin-token', role: 'admin' });\r\n      navigate('/admin');\r\n    } else if (username === 'user' && password === 'user') {\r\n      localStorage.setItem('token', 'user-token');\r\n      localStorage.setItem('role', 'user');\r\n      setUser({ token: 'user-token', role: 'user' });\r\n      navigate('/posts');\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setUser(null);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,KAAK,IAAIG,IAAI,EAAE;MACjBL,OAAO,CAAC;QAAEE,KAAK;QAAEG;MAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChDL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,aAAa,CAAC;MAC5CN,YAAY,CAACM,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;MACrCT,OAAO,CAAC;QAAEE,KAAK,EAAE,aAAa;QAAEG,IAAI,EAAE;MAAQ,CAAC,CAAC;MAChDJ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM,IAAIM,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,MAAM,EAAE;MACrDL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;MAC3CN,YAAY,CAACM,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;MACpCT,OAAO,CAAC;QAAEE,KAAK,EAAE,YAAY;QAAEG,IAAI,EAAE;MAAO,CAAC,CAAC;MAC9CJ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLS,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BZ,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEO,KAAK;MAAEK;IAAO,CAAE;IAAAd,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAzCIF,YAAY;EAAA,QAECJ,WAAW;AAAA;AAAA2B,EAAA,GAFxBvB,YAAY;AA2ClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}